// packages/rw-ui/src/components/Input/Input.module.scss

@import '../../styles/variables.scss';
@import '../../styles/mixins.scss';

.container {
  display: flex;
  flex-direction: column;
  gap: $spacing-1;
}

.label {
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  color: $text-color-primary;
  margin-bottom: $spacing-1;

  &.required::after {
    content: ' *';
    color: $danger-color;
  }
}

.inputWrapper {
  position: relative;
  display: flex;
  align-items: center;
  border: 1px solid $border-color;
  border-radius: $border-radius-base;
  background-color: $white;
  transition: $transition-base;

  &:hover:not(.disabled) {
    border-color: $primary-color;
  }

  &:focus-within:not(.disabled) {
    border-color: $primary-color;
    box-shadow: $box-shadow-focus;
  }

  &.error {
    border-color: $danger-color;

    &:focus-within {
      border-color: $danger-color;
      box-shadow: $box-shadow-focus-danger;
    }
  }

  &.disabled {
    background-color: $gray-50;
    border-color: $gray-200;
    cursor: not-allowed;
  }

  // 尺寸变体
  &.small {
    height: $input-height-sm;
    padding: 0 $input-padding-x-sm;

    .input {
      font-size: $input-font-size-sm;
    }
  }

  &.medium {
    height: $input-height-base;
    padding: 0 $input-padding-x-base;

    .input {
      font-size: $input-font-size-base;
    }
  }

  &.large {
    height: $input-height-lg;
    padding: 0 $input-padding-x-lg;

    .input {
      font-size: $input-font-size-lg;
    }
  }

  // 有前缀时的样式
  &.hasPrefix {
    padding-left: $spacing-1;

    .input {
      padding-left: $spacing-1;
    }
  }

  // 有后缀时的样式
  &.hasSuffix {
    padding-right: $spacing-1;

    .input {
      padding-right: $spacing-1;
    }
  }
}

.input {
  flex: 1;
  border: none;
  outline: none;
  background: transparent;
  color: $text-color-primary;
  font-family: inherit;

  &::placeholder {
    color: $text-color-secondary;
  }

  &:disabled {
    color: $text-color-disabled;
    cursor: not-allowed;
  }
}

.prefix,
.suffix {
  display: flex;
  align-items: center;
  color: $text-color-secondary;
  font-size: $font-size-sm;
  padding: 0 $spacing-1;
}

.clearButton {
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  color: $text-color-secondary;
  cursor: pointer;
  padding: $spacing-1;
  border-radius: $border-radius-sm;
  transition: $transition-base;

  &:hover {
    color: $text-color-primary;
    background-color: $gray-100;
  }

  &:focus {
    outline: 2px solid $primary-color;
    outline-offset: 1px;
  }
}

.errorMessages {
  display: flex;
  flex-direction: column;
  gap: $spacing-1;
}

.errorMessage {
  font-size: $font-size-xs;
  color: $danger-color;
  line-height: $line-height-normal;
  display: flex;
  align-items: center;
  gap: $spacing-1;

  &::before {
    content: '⚠';
    font-size: $font-size-sm;
    flex-shrink: 0;
  }
}

.helperText {
  font-size: $font-size-xs;
  color: $text-color-secondary;
  line-height: $line-height-normal;
}

// 响应式调整
@include media-breakpoint-down(sm) {
  .container {
    .label {
      font-size: $font-size-xs;
    }

    .inputWrapper {
      &.small {
        height: 24px;
        padding: 0 $spacing-1;
      }

      &.medium {
        height: 32px;
        padding: 0 $spacing-2;
      }

      &.large {
        height: 40px;
        padding: 0 $spacing-3;
      }
    }
  }
}

// 暗色主题支持
@media (prefers-color-scheme: dark) {
  .inputWrapper {
    background-color: $gray-800;
    border-color: $gray-600;

    &:hover:not(.disabled) {
      border-color: lighten($primary-color, 20%);
    }

    &:focus-within:not(.disabled) {
      border-color: lighten($primary-color, 20%);
    }

    &.disabled {
      background-color: $gray-700;
      border-color: $gray-600;
    }
  }

  .input {
    color: $white;

    &::placeholder {
      color: $gray-400;
    }

    &:disabled {
      color: $gray-500;
    }
  }

  .label {
    color: $gray-200;
  }

  .prefix,
  .suffix {
    color: $gray-400;
  }

  .clearButton {
    color: $gray-400;

    &:hover {
      color: $white;
      background-color: $gray-700;
    }
  }

  .helperText {
    color: $gray-400;
  }

  .errorMessage {
    color: lighten($danger-color, 20%);
  }
}